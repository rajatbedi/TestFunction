  rules_version = '2';
  service cloud.firestore {
    match /databases/{database}/documents {

      match /users/{userID} {
        //allow read: if (request.auth != null && userID == request.auth.uid) || isOwner() || isSupport() || resource.data.teamId == getUser().teamId; 
        allow read: if true;
        allow get: if true;
        allow create: if true;
        allow update: if (request.auth != null && userID == request.auth.uid) || isOwner() || isSupport() || (resource.data.teamId == getUser().teamId && (getUser().teamRole == "owner" || getUser().teamRole == "admin")); 
        allow delete: if true;
      }


      match /teams/{teamID} {
        // allow read: if isOwner() || isSupport() || teamID == getUserTeamId(); 

        allow read: if true;
        allow create: if true;
        allow update: if isOwner() || (teamID == getUser().teamId && (getUser().teamRole == "owner" || getUser().teamRole == "admin")); 
        allow delete: if isOwner() || (teamID == getUser().teamId && (getUser().teamRole == "owner" || getUser().teamRole == "admin")); 
      }

      match /teamInvites/{teamInviteID} {
        allow read: if true; 
        allow list: if true; 

        allow create: if isOwner();
        allow update: if isOwner() || resource.data.teamId == getUserTeamId(); 
        allow delete: if isOwner(); 
      }

      match /quotes/{quoteID} {
        allow get: if true;
        allow list: if (request.auth != null ) || isOwner() || isSupport() || resource.data.teamId == getUserTeamId();

        allow create: if true;
        allow update: if true;
        allow delete: if false;
      }

      match /errors/{errorID} {
        allow get: if true;
        allow create: if true;
        allow update: if true;
        allow delete: if false;
      }

      match /payments/{paymentID} {
        allow read: if isOwner() || isSupport() || isTranslator(); 

        allow write: if isOwner() || isSupport() || isTranslator();
      }

      match /orders/{orderID} {
        allow get: if true;
        allow read: if true;
        //allow list: if (request.auth != null  ) || isOwner() || isSupport() || isTranslator() || resource.data.teamId == getUserTeamId();
        allow list: if true;

        allow create: if true;
      	allow update: if true;

        allow delete: if false; 
      }



      match /clients/{clientID} {
        allow get: if true;
        allow list: if (request.auth != null  ) || isOwner() || isSupport() || isTranslator() || resource.data.teamId == getUserTeamId();

        allow create: if true;
        allow update: if true;
        allow delete: if false; 
      }

       match /teamInvoices/{teamInvoiceID} {
        allow get: if true;
        allow list: if (request.auth != null  ) || isOwner() || isSupport() || isTranslator() || resource.data.teamId == getUserTeamId();

        allow create: if true;
        allow update: if true;
        allow delete: if false; 
      }

       match /orderInvoices/{orderInvoiceID} {
        allow read: if true;
        allow get: if true;
        allow list: if (request.auth != null  ) || isOwner() || isSupport() || isTranslator() || resource.data.teamId == getUserTeamId();

        allow create: if true;
      	allow update: if true;

        allow delete: if false; 
      }

      match /notifications/{notificationID} {
        allow read: if isOwner() || isSupport() || isTranslator(); 

        allow create: if isOwner() || isSupport() || isTranslator();
        allow update: if isOwner() || isSupport() || isTranslator();
        allow delete: if false; 
      }

      match /counters/{counterID} {
        allow read: if true; 
        allow update: if true;
      }
      match /testimonials/{testimonialID} {
        allow read: if true; 
        allow write: if true;
        allow update: if true;
        allow delete: if false;
      }

      match /reviews/{reviewID} {
        allow read: if true; 

        allow create: if true;
        allow update: if resource.data.userID == request.auth.uid; 
        allow delete: if resource.data.userID == request.auth.uid; 
      }

      match /marketingCampaigns/{campaignID} {
        allow read: if true; 
        allow update: if request.auth != null; 
      }

      match /sharedLinkEmails/{linkID} {
        allow read: if true;
        allow update: if true;
        allow list: if true;
        allow create: if true;

        allow delete: if isOwner() || isSupport();
      }

      match /coupons/{couponID} {
        allow read: if true;

        allow write: if isOwner() || isSupport();
      }

    match /files/{fileId} {
      allow read: if request.auth != null; 
      allow create: if request.auth != null; 
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId; 
    }

      match /fileComments/{commentID} {
        allow read, write: if true;

        allow get: if true;
        allow list: if true;

        allow create: if true;
        allow update: if true;
        allow delete: if true;
      }


       match /chats/{chatID} {

        allow create: if request.auth != null &&
          request.resource.data.itemID is string &&
          request.resource.data.messages is list &&
          request.resource.data.messages.size() == 1 &&
          request.resource.data.messages[0].senderId == request.auth.uid &&
          request.resource.data.messages[0].message is string;

        allow read,list: if request.auth != null;

        allow update: if request.auth != null &&
          request.resource.data.itemID == resource.data.itemID;
      }


       match /everbarychats/{chatID} {

        allow create: if request.auth != null &&
          request.resource.data.itemID is string &&
          request.resource.data.messages is list &&
          request.resource.data.messages.size() == 1 &&
          request.resource.data.messages[0].senderId == request.auth.uid &&
          request.resource.data.messages[0].message is string;

        allow read, list: if request.auth != null;

        allow update: if request.auth != null &&
          request.resource.data.itemID == resource.data.itemID;
      }
      
       match /quotechats/{chatID} {

        allow create: if request.auth != null &&
          request.resource.data.quoteID is string &&
          request.resource.data.messages is list &&
          request.resource.data.messages.size() == 1 &&
          request.resource.data.messages[0].senderId == request.auth.uid &&
          request.resource.data.messages[0].message is string;

        allow read,list: if request.auth != null;

        allow update: if request.auth != null &&
          request.resource.data.quoteID == resource.data.quoteID;
      }


      function isSupport() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Support';
      }

      function isTranslator() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Translator';
      }

      function isOwner() {
        return request.auth.uid == 'n3W15XkyVbTkcPvQw43GY4UhTBJ3' || request.auth.uid == '6cHhGJ46TUkGcxOvwBqlkNJAtE8z';
      }

      function getUserTeamId() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId;
      }
      function getUser() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      }
    }
  }